# This is the main configuration file for the application.
# https://www.playframework.com/documentation/latest/ConfigFile
# ~~~~~

## Secret key
# http://www.playframework.com/documentation/latest/ApplicationSecret
play.http.secret.key = ${?APPLICATION_SECRET}
play.http.secret.key = "changeme" # Default for development only

## Evolutions
# https://www.playframework.com/documentation/latest/Evolutions
play.evolutions {
  db.default.autoApply = true
}

## Database Connection Pool
play.db {
  prototype {
    # Sets a fixed JDBC connection pool size of 50
    #hikaricp.minimumIdle = 50
    #hikaricp.maximumPoolSize = 50
  }
}

# Database Configuration for Development (H2 in-memory database)
slick.dbs.default.profile = "slick.jdbc.PostgresProfile$"
slick.dbs.default.driver = "org.postgresql.Driver"
slick.dbs.default.db.properties.url = "jdbc:postgresql://localhost:5432/ytchatinteraction"
slick.dbs.default.db.properties.user = "postgres"
slick.dbs.default.db.properties.password = "postgres"
slick.dbs.default.db.properties.driver = "org.postgresql.Driver"

# These database settings can be overridden in production.conf for production environments

# Silhouette Authentication Settings
silhouette {
  # Authenticator settings
  authenticator {
    cookieName = "authenticator"
    cookiePath = "/"
    secureCookie = false # Will be overridden in production
    httpOnlyCookie = true
    useFingerprinting = true
    cookieMaxAge = 30 days
    authenticatorIdleTimeout = 30 minutes
    authenticatorExpiry = 12 hours
    sameSite = "Lax"

    # These values should be overridden in environment-specific configuration
    signer.key = "changeme" # Will be overridden in production
    signer.key = ${?SILHOUETTE_SIGNER_KEY}
    
    crypter.key = "changeme" # Will be overridden in production
    crypter.key = ${?SILHOUETTE_CRYPTER_KEY}

    rememberMe {
      authenticatorExpiry = 30
      authenticatorIdleTimeout = 3600
      cookieMaxAge = 7200
    }
  }

  # CSRF State settings
  csrfStateItemHandler {
    cookieName = "OAuth2State"
    cookiePath = "/"
    secureCookie = false # Will be overridden in production
    httpOnlyCookie = true
    expirationTime = 5 minutes
  }

  # YouTube provider settings
  youtube {
    authorizationURL = "https://accounts.google.com/o/oauth2/auth"
    accessTokenURL = "https://oauth2.googleapis.com/token"
    redirectURL = "http://localhost:9000/authenticate/youtube"
    redirectURL = ${?YOUTUBE_REDIRECT_URL}
    
    # These values should be overridden in environment-specific configuration or environment variables
    clientID = "changeme"
    clientID = ${?YOUTUBE_CLIENT_ID}
    
    clientSecret = "changeme"
    clientSecret = ${?YOUTUBE_CLIENT_SECRET}
    
    scope = "https://www.googleapis.com/auth/youtube.readonly"
  }
}

// Set timezone configuration for date/time handling
play.i18n.langs = ["en"]
# Set default timezone to UTC for consistent ISO 8601 timestamp handling
pekko.http.parsing.illegal-header-warnings = off

# Replay Parser Service Configuration
replayparser.url = "http://localhost:5000"
replayparser.url = ${?REPLAY_PARSER_URL}

// Include environment-specific YouTube API configuration
include "youtube.conf"

// Enable richer pekko logging
pekko {
  loggers = ["org.apache.pekko.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "org.apache.pekko.event.slf4j.Slf4jLoggingFilter"
}

// Add CSP header in explicitly in a custom filter.
play.filters.enabled += filters.ContentSecurityPolicyFilter

// Explicitly enable modules
play.modules.enabled += controllers.InputSanitizerModule
play.modules.enabled += modules.ActorModule
play.modules.enabled += modules.SilhouetteModule

// CSRF configuration
play.filters.csrf.cookie.name = "Csrf-Token"
play.filters.csrf.token.name = "csrfToken"
play.filters.csrf.contentType.blackList = []

// Set default role for Pekko
pekko.actor.default-dispatcher.fork-join-executor.parallelism-factor = 1.0
pekko.actor.debug.receive = on

play.filters.hosts {
  # Allow requests to example.com, its subdomains, and localhost:9000.
  allowed = ["192.168.1.230:9000", "localhost:9000", "*.evolutioncomplete.com"]
  allowed = ${?ALLOWED_HOSTS}
}
