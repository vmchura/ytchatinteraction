# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                           controllers.HomeController.index()
GET     /streamerevents                       controllers.HomeController.streamerevents()

# Language management
GET     /language/:lang             controllers.LanguageController.changeLanguage(lang: String)

# Event management
GET     /events                     controllers.EventController.eventManagement()
POST    /events                     controllers.EventController.createEvent()
GET     /events/:id/stop-votes      controllers.EventController.endEvent(id: Int)
GET     /events/:id/close           controllers.EventController.closeEvent(id: Int)
GET     /events/:id/select-winner   controllers.EventController.selectWinnerForm(id: Int)
POST    /events/:id/select-winner   controllers.EventController.setWinnerAndClose(id: Int)
GET     /events/history             controllers.EventController.eventHistory()
GET     /events/full-form           controllers.EventController.fullEventForm()
GET     /api/polls/recent           controllers.EventController.recentPolls()


# Authentication routes
GET     /login                      controllers.AuthController.login
GET     /authenticate/:provider     controllers.AuthController.authenticate(provider)
GET     /signout                    controllers.AuthController.signOut
GET     /api/user                   controllers.AuthController.userInfo

# User profile routes
GET     /profile/change-alias       controllers.AliasController.showChangeAliasForm()
POST    /profile/change-alias       controllers.AliasController.changeAlias()

# Admin routes (requires admin authorization)
GET     /admin                      controllers.AdminController.adminDashboard()

# YouTube Frontend routes
GET     /youtube                    controllers.YoutubeFrontendController.showStreamIdForm()
POST    /youtube/get-chat-id        controllers.YoutubeFrontendController.getLiveChatId()
POST    /youtube/start-monitoring   controllers.YoutubeFrontendController.startMonitoring()
GET     /youtube/stop-monitoring/:id controllers.YoutubeFrontendController.stopMonitoring(id: String)

# YouTube Live Chat monitoring endpoints

# Currency management endpoints
GET     /currency                   controllers.CurrencyController.showCurrencyForm()
POST    /currency                   controllers.CurrencyController.addCurrency()
GET     /currency/:channelId        controllers.CurrencyController.getStreamerBalance(channelId: String)
GET     /currency/streamer/:channelId/users  controllers.CurrencyController.showStreamerToUserForm(channelId: String)
POST    /currency/streamer/:channelId/transfer  controllers.CurrencyController.transferCurrencyToUser(channelId: String)

# User Events routes (requires authentication)
GET     /my-events                  controllers.UserEventsController.userEvents()
POST    /my-events/vote             controllers.UserEventsController.submitVote()
GET     /my-events/join/:eventId    controllers.UserEventsController.joinEvent(eventId: Int)
POST    /my-events/tournament/:tournamentId/register controllers.UserEventsController.registerForTournament(tournamentId: Long)
GET     /my-events/ws               controllers.UserEventsController.eventsUpdates

# Tournament management routes
GET     /tournaments                controllers.TournamentController.showOpenTournaments()
GET     /tournaments/create         controllers.TournamentController.showCreateForm()
POST    /tournaments/create         controllers.TournamentController.createTournament()
POST    /tournaments/:id/start      controllers.TournamentController.startTournament(id: Long)

# Tournament User routes
# Tournament dashboard functionality merged into UserEventsController.userEvents

# Replay Parser Health Check routes
GET     /replay-parser/health       controllers.ReplayParserHealthController.healthPage()

# Tournament Match File Upload routes (JSON API only)
GET     /match/:tournamentId/:matchId/upload      controllers.FileUploadController.uploadFormForMatch(tournamentId: Long, matchId: Long)
POST    /match/:tournamentId/:matchId/upload      controllers.FileUploadController.uploadFile(tournamentId: Long, matchId: Long)
POST    /match/:tournamentId/:matchId/file/:sha256Hash  controllers.FileUploadController.removeFile(tournamentId: Long, matchId: Long, sha256Hash: String)
POST    /mydata controllers.FileUploadController.mydata()

# Match Result routes
POST    /match/:tournamentId/:matchId/result  controllers.MatchResultController.submitResult(tournamentId: Long, matchId: Long)

# Polls view
GET     /polls                      controllers.PollsViewController.viewPolls()

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)
->      /webjars                    webjars.Routes